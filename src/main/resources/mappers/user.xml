<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.parker.user.dao.UserDAO">
	<!--회원가입 -->
	<insert id="userinsert" parameterType="com.parker.user.vo.UserVO">
		<selectKey keyProperty="user_number" resultType="int" order="BEFORE">
			select seq_user_tb.nextval from dual
		</selectKey>
		insert into users_tb(
		user_number,
		user_name,
		user_id,
		user_password,
		user_email,
		zip_code,
		user_address,
		detail_address,
		user_birthday,
		user_cell,
		user_phone,
		user_gender,
		user_privacyconsignment,
		user_termsofuse,
		user_receiveadvertising,
		user_regdate
		)
		values(
		#{user_number},
		#{user_name},
		#{user_id},
		#{user_password},
		#{user_email},
		#{zip_code},
		#{user_address},
		#{detail_address},
		#{user_birthday},
		#{user_cell},
		#{user_phone},
		#{user_gender},
		#{user_privacyconsignment},
		#{user_termsofuse},
		#{user_receiveadvertising},
		sysdate
		)
	</insert>
	<!--회원가입 아이디 중복검사 -->
	<select id="useridcheck" parameterType="com.parker.user.vo.UserVO"
		resultType="int">
		<!-- select count(*) from users_tb where user_id = #{user_id} -->

		select count(*)
		from users_tb
		where user_id = #{user_id}
		<if test='user_id !=null and user_id != ""'>
		</if>
	</select>
	
	<!-- 이메일 중복확인 -->
	<select id="emailChk" parameterType="com.parker.user.vo.UserVO" resultType="int">
	select 
		count(*)
	from 
		users_tb
	where 
		user_email = #{user_email}
	</select>


	<!-- 로그인 -->
	<select id="selectLogin" parameterType="com.parker.user.vo.UserVO"
		resultType="com.parker.user.vo.UserVO">
		SELECT to_char(user_birthday,'YYYY/MM/DD'),user_number,
		user_name,
		user_id,
		user_email,
		zip_code,
		user_address,
		detail_address,
		user_cell,
		user_phone,
		user_gender,
		user_regdate,
		user_status
		FROM
		USERS_TB
		where
		user_id = #{user_id}

		<!-- SELECT user_id, user_name, user_number,user_password FROM USERS_TB 
			where user_id = #{user_id} and user_password = #{user_password} -->

	</select>

	<!-- 로그인 -->
	<select id="sessionLogin1" parameterType="com.parker.user.vo.UserVO"
		resultType="String">
		SELECT 
		user_password
		
		FROM
		USERS_TB
		where
		user_id = #{user_id}
	</select>


	<!--아이디찾기 -->
	<select id="idFind" parameterType="com.parker.user.vo.UserVO"
		resultType="com.parker.user.vo.UserVO">
		SELECT
		user_id
		FROM
		USERS_TB
		where
		user_name = #{user_name}
		and
		user_email = #{user_email}
	</select>

	<!-- 비밀번호찾기 -->
	<select id="passEmailFind" parameterType="com.parker.user.vo.UserVO"
		resultType="com.parker.user.vo.UserVO">
		SELECT user_name, user_id, user_email,
		user_password
		FROM
		USERS_TB
		where
		user_name = #{user_name}
		and user_id = #{user_id}
		and
		user_email =
		#{user_email}

	</select>

	<!-- 비밀번호찾기변경 -->
	<update id="passFindChange" parameterType="com.parker.user.vo.UserVO">
		update
		users_tb
		set
		user_password = #{user_password}
		where
		user_id = #{user_id}
	</update>

	<!--회원정보변경전 비밀번호확인 -->
	<select id="passCheck" parameterType="com.parker.user.vo.UserVO"
		resultType="com.parker.user.vo.UserVO">
		SELECT  to_char(user_birthday,'YYYY/MM/DD') as user_birthday, user_number,
		user_name,
		user_id,
		user_password,
		user_email,
		zip_code,
		user_address,
		detail_address,
		user_cell,
		user_phone,
		user_gender,
		user_regdate,
		user_status
		FROM
		USERS_TB
		where
		user_number = #{user_number}
	</select>

	<!-- 회원 정보 변경 -->
	<update id="userUpdate" parameterType="com.parker.user.vo.UserVO">
		update
		users_tb
		set
		user_name = #{user_name},
		user_id = #{user_id},
		user_password = #{user_password},
		user_email = #{user_email},
		zip_code =
		#{zip_code},
		user_address = #{user_address},
		detail_address =
		#{detail_address},
		user_birthday =
		#{user_birthday},
		user_cell = #{user_cell},
		user_phone = #{user_phone},
		user_gender = #{user_gender},
		<!-- user_privacyconsignment = #{user_privacyconsignment}, user_termsofuse 
			= #{user_termsofuse}, user_receiveadvertising = #{user_receiveadvertising}, -->
		user_regdate = sysdate

		where
		user_number = #{user_number}

	</update>

	<!-- 회원 탈퇴 -->
	<update id="userUpdateDelete" parameterType="com.parker.user.vo.UserVO">
		update
		users_tb
		set
		user_status = 'D'
		where
		user_number = #{user_number}

	</update>
	
	

</mapper>
